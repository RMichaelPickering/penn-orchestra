#summary A glossary of Orchestra terms.

= Glossary =

*_Epoch Number_* global publish counter in the Update Store, similiar to a subversion revision number. Starts at -1, after the first publish we are at Epoch 0. Every epoch contains exactly one publish.

*_Labeled Null_* different form SQL null - we can join on labeled nulls. They can be used when inferring new values though mappings. _1_ indicates there is no labeled null. All other values than _1_ are Skolem values. 

*_Publish_* when a peer publishes it notifies the _Update Store_ of local deltas to its instance since the peer's last publish. Publish is currently always followed by Update Exchange.

Note that only net changes are included. If for example a tuple is inserted then deleted, nothing would be sent to the update store. If a tuple was inserted, deleted, and inserted, only one insert would be sent to the update store.

A publish is currently always followed an update exchange. 

*_Reconcile_* an optional step that will follow Update Exchange, not currently implemented, that includes the use of trust conditions to decide what tuples get inserted and deleted. In some contexts, reconcile is used interchangeable with Update Exchange. 

Takes all candidate updates and uses trust conditions.

*_Reconcile Number_* it's a local update exchange counter kept track of by each peer.

*_State Store_* 

*_Schema_* a definition, written in XML, of an Orchestra system. Sometimes called an "Orchestra schema" to differentiate from a database schema.

*_Update Exchange_* when a peer asks for all deltas that have occurred in all peers since since its last update exchange and runs those deltas through its mappings, applying the results to its tables. After a peer publishes that peer does an update exchange. 

*_Update Store_* the hub of an Orchestra system. Primarily, the repository for each peer's epoch deltas. It is also used to store each peer's decisions about which non-local transactions it has accepted or rejected. Composed of several Berkley DB instances.